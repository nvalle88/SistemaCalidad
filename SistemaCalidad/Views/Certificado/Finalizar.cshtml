@model SistemaCalidad.Models.Certificado
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "CREATE";
}
@section Migas{
    <li><a asp-action="Index" onclick="cargando()">Certificados</a></li>
    <li><a asp-action="Editar" asp-route-id="@Model.CertificadoId" onclick="cargando()">Crear</a></li>
    <li class="active">Confirmación </li>
}

<link rel="stylesheet" type="text/css" href="~/lib/bootstrap-fileinput/css/fileinput.min.css">

<div class="row">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-9 margin-top-0">
        <h1 class="page-title text-align-center txt-color-blueDark">
            <b>   &nbsp;</b>
        </h1>
    </div>
    <div class="col-xs-12 col-sm-5 col-md-5 col-lg-3 margin-top-0">
        <ul id="sparks">
            <li class="sparks-info">
                <a class="btn btn-primary" onclick="cargando()" asp-action="Editar" asp-route-id="@Model.CertificadoId"><i class="fa fa-arrow-left"></i> Regresar </a>
            </li>
        </ul>
    </div>
    @{var user = await UserManager.FindByEmailAsync(User.Identity.Name);}
</div>



<section id="widget-grid" class="">

    
    <div class="row">
        
        <article class="col-sm-12 col-md-12 col-lg-12">
            <div class="jarviswidget" id="wid-id-3" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false">
                <header>
                    <span class="widget-icon">
                        <i class="fa fa-check"></i>
                    </span>
                    <h2>Confirmaci&oacute;n del Certificado </h2>
                </header>
                <div>
                    <div class="jarviswidget-editbox">
                    </div>
                    <div class="widget-body">
                       
                           
                      


                        <form class="" asp-action="Finalizar" method="post" enctype="multipart/form-data">
                            <input asp-for="CertificadoId" value="@Model.CertificadoId" type="hidden" />
                            <input asp-for="Estado" value="@Model.Estado" type="hidden" />
                            <input asp-for="ProductoFinalId" value="@Model.ProductoFinalId" type="hidden" />
                            <input asp-for="NumeroGuia" value="@Model.NumeroGuia" type="hidden" />
                            <input asp-for="Liberado" value="@Model.Liberado" type="hidden" />
                            <input asp-for="Tipo" value="@Model.Tipo" type="hidden" />
                            <input asp-for="OrdenVenta" value="@Model.OrdenVenta" type="hidden" />
                            <input asp-for="PedidoVenta" value="@Model.PedidoVenta" type="hidden" />
                            <input asp-for="Valor" value="@Model.Valor" type="hidden" />
                            <input asp-for="Peso" value="@Model.Peso" type="hidden" />
                            <input asp-for="VerMateriaPrima" value="@Model.VerMateriaPrima" type="hidden" />
                            <input asp-for="NumeroOrden" value="@Model.NumeroOrden" type="hidden" />
                            <input asp-for="CumpleFechaOrdenes" value="@Model.CumpleFechaOrdenes" type="hidden" />
                            <fieldset>

                                @if (Model.CumpleFechaOrdenes == false)
                                {
                                    <div class="col col-lg-12 alert alert-block alert-danger">
                                        <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> ALERTA!</h4>
                                        <p>
                                            Se han superado el n&uacute;mero de d&iacute;as para la generaci&oacute;n del Certificado!
                                        </p>
                                    </div>
                                }

                            </fieldset>
                            <fieldset>

                                <div class=" col col-lg-8">
                                    <ul class="list-group no-margin padding-10">
                                        <li class="list-group-item col col-lg-12">

                                            <h3>
                                                <a href="javascript:void(0);"><b>C&oacute;digo: @Model.CertificadoId</b></a>
                                            </h3>

                                            <hr />
                                            <div class="form-group row col col-12">

                                                <label for="staticEmail" class="col-md-2 col-form-label"> <b>Fecha: </b></label>
                                                <div class="col-sm-10">
                                                    <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;   @Model.FechaGeneracion.Date.ToString("dd/MMMM/yyyy")</label>
                                                </div>
                                                <label for="staticEmail" class="col-md-2 col-form-label"> <b>Producto Final: </b></label>
                                                <div class="col-sm-10">
                                                    <label for="staticEmail" class="col-md-10 col-form-label">&nbsp; @Model.ProductoFinal.Codigo | @Model.ProductoFinal.Descripcion</label>
                                                </div>

                                                @if (@Model.Tipo == 2)
                                                {
                                                    <label for="staticEmail" class="col-md-2 col-form-label"> <b>Orden de Venta: </b></label>
                                                    <div class="col-sm-10">
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;   @Model.OrdenVenta</label>
                                                    </div>
                                                    <label for="staticEmail" class="col-md-2 col-form-label"> <b>Pedido de Venta: </b></label>
                                                    <div class="col-sm-10">
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;@Model.PedidoVenta</label>
                                                    </div>

                                                }
                                                @if (@Model.Tipo == 3)
                                                {
                                                    <label for="staticEmail" class="col-md-2 col-form-label"> <b>Orden de Venta: </b></label>
                                                    <div class="col-sm-10">
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;   @Model.OrdenVenta</label>
                                                    </div>
                                                    <label for="staticEmail" class="col-md-2 col-form-label"> <b>Pedido de Venta: </b></label>
                                                    <div class="col-sm-10">
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;@Model.PedidoVenta</label>
                                                    </div>
                                                    <label for="staticEmail" class="col-md-2 col-form-label"> <b>Valor: </b></label>
                                                    <div class="col-sm-10">
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp; @Model.Valor</label>
                                                    </div>
                                                    <label for="staticEmail" class="col-md-2 col-form-label"> <b>Peso: </b></label>
                                                    <div class="col-sm-10">
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;@Model.Peso</label>
                                                    </div>
                                                }
                                                <label for="staticEmail" class="col-md-2 col-form-label"> <b>Gu&iacute;a: </b></label>
                                                <div class="col-sm-10">
                                                    <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;@Model.NumeroGuia</label>
                                                </div>
                                                <label for="staticEmail" class="col-md-2 col-form-label"> <b>Ordenes: </b></label>
                                                <div class="col-sm-10">
                                                    <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;@Model.NumeroOrden</label>
                                                </div>
                                                <label for="staticEmail" class="col-md-2 col-form-label"> <b>Tipo: </b></label>
                                                <div class="col-sm-10">
                                                    @if (Model.Tipo == 1)
                                                    {
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;Nacional  </label>
                                                    }
                                                    @if (Model.Tipo == 2)
                                                    {
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;Internacional  </label>
                                                    }
                                                    @if (Model.Tipo == 3)
                                                    {
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;Internacional (México)   </label>
                                                    }
                                                    @if (Model.Tipo == 4)
                                                    {
                                                        <label for="staticEmail" class="col-md-10 col-form-label">&nbsp;    Ingl&eacute;s   </label>
                                                    }
                                                </div>

                                                <label for="staticEmail" class="col-md-2 col-form-label"> <b>¿ Mostrar Materia Prima ?: </b></label>
                                                <div class="col-sm-10">
                                                    <span class="onoffswitch">
                                                        <input type="checkbox" disabled checked="@Model.VerMateriaPrima" asp-for="VerMateriaPrima" class="onoffswitch-checkbox" id="st11(@Model.VerMateriaPrima)">
                                                        <label class="onoffswitch-label" asp-for="VerMateriaPrima" for="st11(@Model.VerMateriaPrima)">
                                                            <span class="onoffswitch-inner" data-swchon-text="Si" data-swchoff-text="No"></span>
                                                            <span class="onoffswitch-switch">
                                                            </span>
                                                        </label>
                                                    </span>
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                @if (Model.CumpleFechaOrdenes == true)
                                                {
                                                    <legend> </legend>
                                                    <a asp-action="Certificado" asp-controller="Report" asp-route-id="@Model.CertificadoId" class="btn btn-primary" target="_blank">
                                                        <i class="fa fa-edit"></i>
                                                        Generar Certificado
                                                    </a>
                                                }
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                                @if (Model.CumpleFechaOrdenes == true)
                                {
                                    @if (Model.Estado != 0)
                                    {

                                        <fieldset>
                                            <div class="row col col-lg-12">
                                                <div class="col-lg-12">
                                                    <div class="form-group">

                                                        <div class="col-lg-12">
                                                            <section class=" col col-12">
                                                                <legend>
                                                                    Cargar el Certificado
                                                                </legend>
                                                                <div class="file-loading col col-lg-10">
                                                                    <input id="file" name="file" type="file" multiple>
                                                                </div>
                                                                <div id="kartik-file-errors"></div>
                                                            </section>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </fieldset>
                                    }
                                }
                            </fieldset>
                            <p></p>
                            <p></p>

                            @if (Model.CumpleFechaOrdenes == true)
                            {
                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <button onclick="cargando()" class="btn btn-primary" type="submit">
                                                <i class="fa fa-edit"></i>
                                                Guardar
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </form>

                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->

            </div>
            <!-- end widget -->

        </article>
    </div>
</section>
<!-- /.modal -->
@section Scripts {

    <script src='~/lib/bootstrap-fileinput/js/fileinput.min.js'></script>
    <script src='~/lib/bootstrap-fileinput/js/locales/es.js'></script>

    <script>

        $("#file").fileinput({
            showUpload: false,
            dropZoneEnabled: false,
            maxFileCount: 1,
            language: 'es',
            elErrorContainer: '#kartik-file-errors',
            allowedFileExtensions: ["pdf"]
        });

    </script>
    <script type="text/javascript">
        /* DO NOT REMOVE : GLOBAL FUNCTIONS!
     *
     * pageSetUp(); WILL CALL THE FOLLOWING FUNCTIONS
     *
     * // activate tooltips
     * $("[rel=tooltip]").tooltip();
     *
     * // activate popovers
     * $("[rel=popover]").popover();
     *
     * // activate popovers with hover states
     * $("[rel=popover-hover]").popover({ trigger: "hover" });
     *
     * // activate inline charts
     * runAllCharts();
     *
     * // setup widgets
     * setup_widgets_desktop();
     *
     * // run form elements
     * runAllForms();
     *
     ********************************
     *
     * pageSetUp() is needed whenever you load a page.
     * It initializes and checks for all basic elements of the page
     * and makes rendering easier.
     *
     */

        pageSetUp();

        /*
         * ALL PAGE RELATED SCRIPTS CAN GO BELOW HERE
         * eg alert("my home function");
         *
         * var pagefunction = function() {
         *   ...
         * }
         * loadScript("/js/plugin/_PLUGIN_NAME_.js", pagefunction);
         *
         * TO LOAD A SCRIPT:
         * var pagefunction = function (){
         *  loadScript(".../plugin.js", run_after_loaded);
         * }
         *
         * OR
         *
         * loadScript(".../plugin.js", run_after_loaded);
         */

        // pagefunction

        var pagefunction = function () {

            // Spinners
            $("#spinner").spinner();
            $("#spinner-decimal").spinner({
                step: 0.01,
                numberFormat: "n"
            });

            $("#spinner-currency").spinner({
                min: 5,
                max: 2500,
                step: 25,
                start: 1000,
                numberFormat: "C"
            });

            //Maxlength
            loadScript("/js/plugin/maxlength/bootstrap-maxlength.min.js", runMaxLength);

            function runMaxLength() {
                $('input[maxlength]').maxlength({
                    warningClass: "label label-success",
                    limitReachedClass: "label label-important",
                });

            }

            // START AND FINISH DATE
            $('#startdate').datepicker({
                dateFormat: 'dd.mm.yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function (selectedDate) {
                    $('#finishdate').datepicker('option', 'minDate', selectedDate);
                }
            });
            $('#finishdate').datepicker({
                dateFormat: 'dd.mm.yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onSelect: function (selectedDate) {
                    $('#startdate').datepicker('option', 'maxDate', selectedDate);
                }
            });

            // Date Range Picker
            $("#from").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 3,
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onClose: function (selectedDate) {
                    $("#to").datepicker("option", "maxDate", selectedDate);
                }

            });
            $("#to").datepicker({
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 3,
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                onClose: function (selectedDate) {
                    $("#from").datepicker("option", "minDate", selectedDate);
                }
            });

            /*
             * TIMEPICKER
             */

            //Load time picker script

            loadScript("/js/plugin/bootstrap-timepicker/bootstrap-timepicker.min.js", runTimePicker);

            function runTimePicker() {
                $('#timepicker').timepicker();
            }

            /*
             * CLOCKPICKER
             */

            // load clockpicker script

            loadScript("/js/plugin/clockpicker/clockpicker.min.js", runClockPicker);

            function runClockPicker() {
                $('#clockpicker').clockpicker({
                    placement: 'top',
                    donetext: 'Done'
                });
            }

            /*
             * JS SLIDER ("NoUISlider")
             */

            loadScript("/js/plugin/noUiSlider/jquery.nouislider.min.js", RunNoUiSlider);


            function RunNoUiSlider() {

                var slider1 = document.getElementById('nouislider-1'),
                    slider2 = document.getElementById('nouislider-2'),
                    slider3 = document.getElementById('nouislider-3'),
                    slider4 = document.getElementById('nouislider-4');

                noUiSlider.create(slider1,
                    {
                        range: {
                            'min': 20,
                            'max': 100
                        },
                        behaviour: 'tap',
                        start: 55,
                        connect: 'upper',
                    });

                noUiSlider.create(slider2,
                    {
                        range: {
                            'min': 0,
                            'max': 300
                        },
                        start: [55, 130],
                        step: 60,
                        connect: true
                    });


                noUiSlider.create(slider3,
                    {
                        range: {
                            'min': 0,
                            'max': 1000
                        },
                        start: [264, 776],
                        step: 1,
                        connect: true
                    });
                slider3.noUiSlider.on('update',
                    function (values) {
                        $(".nouislider-value").text(values[0] + " - " + values[1]);
                    });
                slider3.noUiSlider.on('slide',
                    function (values) {
                        //var values = $(this).val();
                        $(".nouislider-value").text(values[0] + " - " + values[1]);
                    });

                noUiSlider.create(slider4,
                    {
                        range: {
                            'min': 0,
                            'max': 100
                        },
                        behaviour: 'tap',
                        start: 50,
                        connect: 'upper'

                    });

                slider4.setAttribute('disabled', true);

            } // end noUISlider

            /*
             * ION SLIDER
             */
            loadScript("/js/plugin/ion-slider/ion.rangeSlider.min.js", ion_slider);

            function ion_slider() {

                //* ion Range Sliders
                $("#range-slider-1").ionRangeSlider({
                    min: 0,
                    max: 5000,
                    from: 1000,
                    to: 4000,
                    type: 'double',
                    step: 1,
                    postfix: " &euro;",
                    prettify: false,
                    grid: true,
                    inputValuesSeparator: ';'
                });

                $("#range-slider-2").ionRangeSlider({
                    min: 1000,
                    max: 100000,
                    from: 30000,
                    to: 90000,
                    type: 'double',
                    step: 500,
                    postfix: " &euro;",
                    prettify: false,
                    grid: true,
                    inputValuesSeparator: ';'
                });

                $("#range-slider-3").ionRangeSlider({
                    min: 0,
                    from: 2.3,
                    max: 10,
                    type: 'single',
                    step: 0.1,
                    postfix: " mm",
                    prettify: false,
                    grid: true,
                    inputValuesSeparator: ';'
                });

                $("#range-slider-4").ionRangeSlider({
                    min: -50,
                    max: 50,
                    from: 5,
                    to: 25,
                    type: 'double',
                    step: 1,
                    postfix: "°",
                    prettify: false,
                    grid: true,
                    inputValuesSeparator: ';'
                });

                $("#range-slider-5").ionRangeSlider({
                    min: 0,
                    from: 0,
                    max: 10,
                    type: 'single',
                    step: 0.1,
                    postfix: " mm",
                    prettify: false,
                    grid: true,
                    inputValuesSeparator: ';'
                });

            }

            /*
             * BOOTSTRAP DUALLIST BOX
             */

            loadScript("/js/plugin/bootstrap-duallistbox/jquery.bootstrap-duallistbox.min.js", initializeDuallistbox);

            function initializeDuallistbox() {
                var initializeDuallistbox = $('#initializeDuallistbox').bootstrapDualListbox({
                    nonSelectedListLabel: 'Non-selected',
                    selectedListLabel: 'Selected',
                    preserveSelectionOnMove: 'moved',
                    moveOnSelect: false,
                    nonSelectedFilter: 'ion ([7-9]|[1][0-2])'
                });
            }

            /*
             * COLOR PICKER
             */
            loadScript("/js/plugin/colorpicker/bootstrap-colorpicker.min.js", initializeColorpicker);

            function initializeColorpicker() {

                if ($('.colorpicker.dropdown-menu').length) {
                    $('.colorpicker.dropdown-menu').remove();
                }

                $('#colorpicker-1').colorpicker();
                $('#colorpicker-2').colorpicker();

            }

            /*
             * TAGS
             */

            loadScript("/js/plugin/bootstrap-tags/bootstrap-tagsinput.min.js",
                function () {
                    $('.tagsinput').tagsinput('refresh');
                });


            /*
             * KNOB
             */
            loadScript("/js/plugin/knob/jquery.knob.min.js", startKnob);

            function startKnob() {

                $('.knob').knob({
                    change: function (value) {
                        //console.log("change : " + value);
                    },
                    release: function (value) {
                        //console.log(this.$.attr('value'));
                        //console.log("release : " + value);
                    },
                    cancel: function () {
                        //console.log("cancel : ", this);
                    }
                });
            }

            /*
             * X-Ediable
             */

            loadScript("/js/plugin/x-editable/moment.min.js", loadMockJax);

            function loadMockJax() {
                loadScript("/js/plugin/x-editable/jquery.mockjax.min.js", loadXeditable);
            }

            function loadXeditable() {
                loadScript("/js/plugin/x-editable/x-editable.min.js", loadTypeHead);
            }

            function loadTypeHead() {
                loadScript("/js/plugin/typeahead/typeahead.min.js", loadTypeaheadjs);
            }

            function loadTypeaheadjs() {
                loadScript("/js/plugin/typeahead/typeaheadjs.min.js", runXEditDemo);
            }

            function runXEditDemo() {

                (function (e) {
                    "use strict";
                    var t = function (e) {
                        this.init("address", e, t.defaults);
                    };
                    e.fn.editableutils.inherit(t, e.fn.editabletypes.abstractinput);
                    e.extend(t.prototype,
                        {
                            render: function () {
                                this.$input = this.$tpl.find("input");
                            },
                            value2html: function (t, n) {
                                if (!t) {
                                    e(n).empty();
                                    return;
                                }
                                var r = e("<div>").text(t.city).html() +
                                    ", " +
                                    e("<div>").text(t.street).html() +
                                    " st., bld. " +
                                    e("<div>").text(t.building).html();
                                e(n).html(r);
                            },
                            html2value: function (e) {
                                return null;
                            },
                            value2str: function (e) {
                                var t = "";
                                if (e)
                                    for (var n in e)
                                        t = t + n + ":" + e[n] + ";";
                                return t;
                            },
                            str2value: function (e) {
                                return e;
                            },
                            value2input: function (e) {
                                if (!e)
                                    return;
                                this.$input.filter('[name="city"]').val(e.city);
                                this.$input.filter('[name="street"]').val(e.street);
                                this.$input.filter('[name="building"]').val(e.building);
                            },
                            input2value: function () {
                                return {
                                    city: this.$input.filter('[name="city"]').val(),
                                    street: this.$input.filter('[name="street"]').val(),
                                    building: this.$input.filter('[name="building"]').val()
                                };
                            },
                            activate: function () {
                                this.$input.filter('[name="city"]').focus();
                            },
                            autosubmit: function () {
                                this.$input.keydown(function (t) {
                                    t.which === 13 && e(this).closest("form").submit();
                                });
                            }
                        });
                    t.defaults = e.extend({},
                        e.fn.editabletypes.abstractinput.defaults,
                        {
                            tpl:
                                '<div class="editable-address"><label><span>City: </span><input type="text" name="city" class="form-control"></label></div><div class="editable-address"><label><span>Street: </span><input type="text" name="street" class="form-control"></label></div><div class="editable-address"><label><span>Building: </span><input type="text" name="building" class="form-control"></label></div>',
                            inputclass: ""
                        });
                    e.fn.editabletypes.address = t;
                })(window.jQuery);

                //ajax mocks
                $.mockjaxSettings.responseTime = 500;

                $.mockjax({
                    url: '/post',
                    response: function (settings) {
                        log(settings, this);
                    }
                });

                $.mockjax({
                    url: '/error',
                    status: 400,
                    statusText: 'Bad Request',
                    response: function (settings) {
                        this.responseText = 'Please input correct value';
                        log(settings, this);
                    }
                });

                $.mockjax({
                    url: '/status',
                    status: 500,
                    response: function (settings) {
                        this.responseText = 'Internal Server Error';
                        log(settings, this);
                    }
                });

                $.mockjax({
                    url: '/groups',
                    response: function (settings) {
                        this.responseText = [
                            {
                                value: 0,
                                text: 'Guest'
                            }, {
                                value: 1,
                                text: 'Service'
                            }, {
                                value: 2,
                                text: 'Customer'
                            }, {
                                value: 3,
                                text: 'Operator'
                            }, {
                                value: 4,
                                text: 'Support'
                            }, {
                                value: 5,
                                text: 'Admin'
                            }
                        ];
                        log(settings, this);
                    }
                });

                //TODO: add this div to page
                function log(settings, response) {
                    var s = [],
                        str;
                    s.push(settings.type.toUpperCase() + ' url = "' + settings.url + '"');
                    for (var a in settings.data) {
                        if (settings.data[a] && typeof settings.data[a] === 'object') {
                            str = [];
                            for (var j in settings.data[a]) {
                                str.push(j + ': "' + settings.data[a][j] + '"');
                            }
                            str = '{ ' + str.join(', ') + ' }';
                        } else {
                            str = '"' + settings.data[a] + '"';
                        }
                        s.push(a + ' = ' + str);
                    }
                    s.push('RESPONSE: status = ' + response.status);

                    if (response.responseText) {
                        if ($.isArray(response.responseText)) {
                            s.push('[');
                            $.each(response.responseText,
                                function (i, v) {
                                    s.push('{value: ' + v.value + ', text: "' + v.text + '"}');
                                });
                            s.push(']');
                        } else {
                            s.push($.trim(response.responseText));
                        }
                    }
                    s.push('--------------------------------------\n');
                    $('#console').val(s.join('\n') + $('#console').val());
                }

                /*
                 * X-EDITABLES
                 */

                $('#inline').on('change',
                    function (e) {
                        if ($(this).prop('checked')) {
                            window.location.href = '?mode=inline#ajax/plugins.html';
                        } else {
                            window.location.href = '?#ajax/plugins.html';
                        }
                    });

                if (window.location.href.indexOf("?mode=inline") > -1) {
                    $('#inline').prop('checked', true);
                    $.fn.editable.defaults.mode = 'inline';
                } else {
                    $('#inline').prop('checked', false);
                    $.fn.editable.defaults.mode = 'popup';
                }

                //defaults
                $.fn.editable.defaults.url = '/post';
                //$.fn.editable.defaults.mode = 'inline'; use this to edit inline

                //enable / disable
                $('#enable').click(function () {
                    $('#user .editable').editable('toggleDisabled');
                });

                //editables
                $('#username').editable({
                    url: '/post',
                    type: 'text',
                    pk: 1,
                    name: 'username',
                    title: 'Enter username'
                });

                $('#firstname').editable({
                    validate: function (value) {
                        if ($.trim(value) == '')
                            return 'This field is required';
                    }
                });

                $('#sex').editable({
                    prepend: "not selected",
                    source: [
                        {
                            value: 1,
                            text: 'Male'
                        }, {
                            value: 2,
                            text: 'Female'
                        }
                    ],
                    display: function (value, sourceData) {
                        var colors = {
                            "": "gray",
                            1: "green",
                            2: "blue"
                        },
                            elem = $.grep(sourceData,
                                function (o) {
                                    return o.value == value;
                                });

                        if (elem.length) {
                            $(this).text(elem[0].text).css("color", colors[value]);
                        } else {
                            $(this).empty();
                        }
                    }
                });

                $('#status').editable();

                $('#group').editable({
                    showbuttons: false
                });

                $('#vacation').editable({
                    datepicker: {
                        todayBtn: 'linked'
                    }
                });

                $('#dob').editable();

                $('#event').editable({
                    placement: 'right',
                    combodate: {
                        firstItem: 'name'
                    }
                });

                $('#meeting_start').editable({
                    format: 'yyyy-mm-dd hh:ii',
                    viewformat: 'dd/mm/yyyy hh:ii',
                    validate: function (v) {
                        if (v && v.getDate() == 10)
                            return 'Day cant be 10!';
                    },
                    datetimepicker: {
                        todayBtn: 'linked',
                        weekStart: 1
                    }
                });

                $('#comments').editable({
                    showbuttons: 'bottom'
                });

                $('#note').editable();
                $('#pencil').click(function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    $('#note').editable('toggle');
                });

                $('#state').editable({
                    source: [
                        "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut",
                        "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
                        "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota",
                        "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey",
                        "New Mexico", "New York", "North Dakota", "North Carolina", "Ohio", "Oklahoma", "Oregon",
                        "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas",
                        "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming"
                    ]
                });

                $('#state2').editable({
                    value: 'California',
                    typeahead: {
                        name: 'state',
                        local: [
                            "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut",
                            "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
                            "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan",
                            "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
                            "New Jersey", "New Mexico", "New York", "North Dakota", "North Carolina", "Ohio",
                            "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota",
                            "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia",
                            "Wisconsin", "Wyoming"
                        ]
                    }
                });

                $('#fruits').editable({
                    pk: 1,
                    limit: 3,
                    source: [
                        {
                            value: 1,
                            text: 'banana'
                        }, {
                            value: 2,
                            text: 'peach'
                        }, {
                            value: 3,
                            text: 'apple'
                        }, {
                            value: 4,
                            text: 'watermelon'
                        }, {
                            value: 5,
                            text: 'orange'
                        }
                    ]
                });

                $('#tags').editable({
                    inputclass: 'input-large',
                    select2: {
                        tags: ['html', 'javascript', 'css', 'ajax'],
                        tokenSeparators: [",", " "]
                    }
                });

                var countries = [];
                $.each({
                    "BD": "Bangladesh",
                    "BE": "Belgium",
                    "BF": "Burkina Faso",
                    "BG": "Bulgaria",
                    "BA": "Bosnia and Herzegovina",
                    "BB": "Barbados",
                    "WF": "Wallis and Futuna",
                    "BL": "Saint Bartelemey",
                    "BM": "Bermuda",
                    "BN": "Brunei Darussalam",
                    "BO": "Bolivia",
                    "BH": "Bahrain",
                    "BI": "Burundi",
                    "BJ": "Benin",
                    "BT": "Bhutan",
                    "JM": "Jamaica",
                    "BV": "Bouvet Island",
                    "BW": "Botswana",
                    "WS": "Samoa",
                    "BR": "Brazil",
                    "BS": "Bahamas",
                    "JE": "Jersey",
                    "BY": "Belarus",
                    "O1": "Other Country",
                    "LV": "Latvia",
                    "RW": "Rwanda",
                    "RS": "Serbia",
                    "TL": "Timor-Leste",
                    "RE": "Reunion",
                    "LU": "Luxembourg",
                    "TJ": "Tajikistan",
                    "RO": "Romania",
                    "PG": "Papua New Guinea",
                    "GW": "Guinea-Bissau",
                    "GU": "Guam",
                    "GT": "Guatemala",
                    "GS": "South Georgia and the South Sandwich Islands",
                    "GR": "Greece",
                    "GQ": "Equatorial Guinea",
                    "GP": "Guadeloupe",
                    "JP": "Japan",
                    "GY": "Guyana",
                    "GG": "Guernsey",
                    "GF": "French Guiana",
                    "GE": "Georgia",
                    "GD": "Grenada",
                    "GB": "United Kingdom",
                    "GA": "Gabon",
                    "SV": "El Salvador",
                    "GN": "Guinea",
                    "GM": "Gambia",
                    "GL": "Greenland",
                    "GI": "Gibraltar",
                    "GH": "Ghana",
                    "OM": "Oman",
                    "TN": "Tunisia",
                    "JO": "Jordan",
                    "HR": "Croatia",
                    "HT": "Haiti",
                    "HU": "Hungary",
                    "HK": "Hong Kong",
                    "HN": "Honduras",
                    "HM": "Heard Island and McDonald Islands",
                    "VE": "Venezuela",
                    "PR": "Puerto Rico",
                    "PS": "Palestinian Territory",
                    "PW": "Palau",
                    "PT": "Portugal",
                    "SJ": "Svalbard and Jan Mayen",
                    "PY": "Paraguay",
                    "IQ": "Iraq",
                    "PA": "Panama",
                    "PF": "French Polynesia",
                    "BZ": "Belize",
                    "PE": "Peru",
                    "PK": "Pakistan",
                    "PH": "Philippines",
                    "PN": "Pitcairn",
                    "TM": "Turkmenistan",
                    "PL": "Poland",
                    "PM": "Saint Pierre and Miquelon",
                    "ZM": "Zambia",
                    "EH": "Western Sahara",
                    "RU": "Russian Federation",
                    "EE": "Estonia",
                    "EG": "Egypt",
                    "TK": "Tokelau",
                    "ZA": "South Africa",
                    "EC": "Ecuador",
                    "IT": "Italy",
                    "VN": "Vietnam",
                    "SB": "Solomon Islands",
                    "EU": "Europe",
                    "ET": "Ethiopia",
                    "SO": "Somalia",
                    "ZW": "Zimbabwe",
                    "SA": "Saudi Arabia",
                    "ES": "Spain",
                    "ER": "Eritrea",
                    "ME": "Montenegro",
                    "MD": "Moldova, Republic of",
                    "MG": "Madagascar",
                    "MF": "Saint Martin",
                    "MA": "Morocco",
                    "MC": "Monaco",
                    "UZ": "Uzbekistan",
                    "MM": "Myanmar",
                    "ML": "Mali",
                    "MO": "Macao",
                    "MN": "Mongolia",
                    "MH": "Marshall Islands",
                    "MK": "Macedonia",
                    "MU": "Mauritius",
                    "MT": "Malta",
                    "MW": "Malawi",
                    "MV": "Maldives",
                    "MQ": "Martinique",
                    "MP": "Northern Mariana Islands",
                    "MS": "Montserrat",
                    "MR": "Mauritania",
                    "IM": "Isle of Man",
                    "UG": "Uganda",
                    "TZ": "Tanzania, United Republic of",
                    "MY": "Malaysia",
                    "MX": "Mexico",
                    "IL": "Israel",
                    "FR": "France",
                    "IO": "British Indian Ocean Territory",
                    "FX": "France, Metropolitan",
                    "SH": "Saint Helena",
                    "FI": "Finland",
                    "FJ": "Fiji",
                    "FK": "Falkland Islands (Malvinas)",
                    "FM": "Micronesia, Federated States of",
                    "FO": "Faroe Islands",
                    "NI": "Nicaragua",
                    "NL": "Netherlands",
                    "NO": "Norway",
                    "NA": "Namibia",
                    "VU": "Vanuatu",
                    "NC": "New Caledonia",
                    "NE": "Niger",
                    "NF": "Norfolk Island",
                    "NG": "Nigeria",
                    "NZ": "New Zealand",
                    "NP": "Nepal",
                    "NR": "Nauru",
                    "NU": "Niue",
                    "CK": "Cook Islands",
                    "CI": "Cote d'Ivoire",
                    "CH": "Switzerland",
                    "CO": "Colombia",
                    "CN": "China",
                    "CM": "Cameroon",
                    "CL": "Chile",
                    "CC": "Cocos (Keeling) Islands",
                    "CA": "Canada",
                    "CG": "Congo",
                    "CF": "Central African Republic",
                    "CD": "Congo, The Democratic Republic of the",
                    "CZ": "Czech Republic",
                    "CY": "Cyprus",
                    "CX": "Christmas Island",
                    "CR": "Costa Rica",
                    "CV": "Cape Verde",
                    "CU": "Cuba",
                    "SZ": "Swaziland",
                    "SY": "Syrian Arab Republic",
                    "KG": "Kyrgyzstan",
                    "KE": "Kenya",
                    "SR": "Suriname",
                    "KI": "Kiribati",
                    "KH": "Cambodia",
                    "KN": "Saint Kitts and Nevis",
                    "KM": "Comoros",
                    "ST": "Sao Tome and Principe",
                    "SK": "Slovakia",
                    "KR": "Korea, Republic of",
                    "SI": "Slovenia",
                    "KP": "Korea, Democratic People's Republic of",
                    "KW": "Kuwait",
                    "SN": "Senegal",
                    "SM": "San Marino",
                    "SL": "Sierra Leone",
                    "SC": "Seychelles",
                    "KZ": "Kazakhstan",
                    "KY": "Cayman Islands",
                    "SG": "Singapore",
                    "SE": "Sweden",
                    "SD": "Sudan",
                    "DO": "Dominican Republic",
                    "DM": "Dominica",
                    "DJ": "Djibouti",
                    "DK": "Denmark",
                    "VG": "Virgin Islands, British",
                    "DE": "Germany",
                    "YE": "Yemen",
                    "DZ": "Algeria",
                    "US": "United States",
                    "UY": "Uruguay",
                    "YT": "Mayotte",
                    "UM": "United States Minor Outlying Islands",
                    "LB": "Lebanon",
                    "LC": "Saint Lucia",
                    "LA": "Lao People's Democratic Republic",
                    "TV": "Tuvalu",
                    "TW": "Taiwan",
                    "TT": "Trinidad and Tobago",
                    "TR": "Turkey",
                    "LK": "Sri Lanka",
                    "LI": "Liechtenstein",
                    "A1": "Anonymous Proxy",
                    "TO": "Tonga",
                    "LT": "Lithuania",
                    "A2": "Satellite Provider",
                    "LR": "Liberia",
                    "LS": "Lesotho",
                    "TH": "Thailand",
                    "TF": "French Southern Territories",
                    "TG": "Togo",
                    "TD": "Chad",
                    "TC": "Turks and Caicos Islands",
                    "LY": "Libyan Arab Jamahiriya",
                    "VA": "Holy See (Vatican City State)",
                    "VC": "Saint Vincent and the Grenadines",
                    "AE": "United Arab Emirates",
                    "AD": "Andorra",
                    "AG": "Antigua and Barbuda",
                    "AF": "Afghanistan",
                    "AI": "Anguilla",
                    "VI": "Virgin Islands, U.S.",
                    "IS": "Iceland",
                    "IR": "Iran, Islamic Republic of",
                    "AM": "Armenia",
                    "AL": "Albania",
                    "AO": "Angola",
                    "AN": "Netherlands Antilles",
                    "AQ": "Antarctica",
                    "AP": "Asia/Pacific Region",
                    "AS": "American Samoa",
                    "AR": "Argentina",
                    "AU": "Australia",
                    "AT": "Austria",
                    "AW": "Aruba",
                    "IN": "India",
                    "AX": "Aland Islands",
                    "AZ": "Azerbaijan",
                    "IE": "Ireland",
                    "ID": "Indonesia",
                    "UA": "Ukraine",
                    "QA": "Qatar",
                    "MZ": "Mozambique"
                },
                    function (k, v) {
                        countries.push({
                            id: k,
                            text: v
                        });
                    });

                $('#country').editable({
                    source: countries,
                    select2: {
                        width: 200
                    }
                });

                $('#address').editable({
                    url: '/post',
                    value: {
                        city: "Moscow",
                        street: "Lenina",
                        building: "12"
                    },
                    validate: function (value) {
                        if (value.city == '')
                            return 'city is required!';
                    },
                    display: function (value) {
                        if (!value) {
                            $(this).empty();
                            return;
                        }
                        var html = '<b>' +
                            $('<div>').text(value.city).html() +
                            '</b>, ' +
                            $('<div>').text(value.street)
                                .html() +
                            ' st., bld. ' +
                            $('<div>').text(value.building).html();
                        $(this).html(html);
                    }
                });

                $('#user .editable').on('hidden',
                    function (e, reason) {
                        if (reason === 'save' || reason === 'nochange') {
                            var $next = $(this).closest('tr').next().find('.editable');
                            if ($('#autoopen').is(':checked')) {
                                setTimeout(function () {
                                    $next.editable('show');
                                },
                                    300);
                            } else {
                                $next.focus();
                            }
                        }
                    });

            }


        };

        // end pagefunction

        // destroy generated instances
        // pagedestroy is called automatically before loading a new page
        // only usable in AJAX version!

        var pagedestroy = function () {

            /*
            Example below:

            $("#calednar").fullCalendar( 'destroy' );
            if (debugState){
                root.console.log("✔ Calendar destroyed");
            }

            For common instances, such as Jarviswidgets, Google maps, and Datatables, are automatically destroyed through the app.js loadURL mechanic

            */

            // destroy spinner
            $(".spinner").spinner("destroy");

            // remove maxlength
            $('input[maxlength]').off();
            $('input[maxlength]').remove();

            // remove timepicker
            $('#timepicker').off();
            $('#timepicker').remove();

            // remove clockpicker
            $('#clockpicker').off();
            $('#clockpicker').remove();

            // destroy duellist
            $('#initializeDuallistbox').bootstrapDualListbox('destroy');

            // destroy built in datepicker
            $('.hasDatepicker').off();
            $('.hasDatepicker').remove();

            // destroy noui slider
            $('.noUiSlider').find('*').addBack().off();

            // destroy ion range slider
            $('.irs').find('*').addBack().off();

            // destroy tagsinput
            $('.tagsinput').tagsinput('destroy');

            // destroy colorpicker
            $('#colorpicker-1').off();
            $('#colorpicker-1').remove();
            $('#colorpicker-2').off();
            $('#colorpicker-2').remove();

            //destroy xeditable
            $('#username').editable("destroy");
            $('#firstname').editable("destroy");
            $('#sex').editable("destroy");
            $('#group').editable("destroy");
            $('#status').editable("destroy");
            $('#vacation').editable("destroy");
            $('#dob').editable("destroy");
            $('#event').editable("destroy");
            $('#comments').editable("destroy");
            $('#state2').editable("destroy");
            //$('#fruits').editable("destroy");
            //$('#tags').editable("destroy");
            //$('#country').editable("destroy");
            //$('#address').editable("destroy");

            // destroy knob
            $('.knob').find('*').addBack().off();

            if (debugState) {
                root.console.log("✔ Spiner destroyed");
                root.console.log("✔ Maxlength destroyed");
                root.console.log("✔ Duellist destroyed");
                root.console.log("✔ Timepicker destroyed");
                root.console.log("✔ Clockpicker destroyed");
                root.console.log("✔ Custom Datepicker destroyed");
                root.console.log("✔ NoUI Slider destroyed");
                root.console.log("✔ Ion Range Slider destroyed");
                root.console.log("✔ Tagsinput destroyed");
                root.console.log("✔ Colorpicker destroyed");
                root.console.log("✔ Xeditable  destroyed");
                root.console.log("✔ JSKnob  destroyed");
            }

        };

        // end destroy

        // run pagefunction

        pagefunction();

    </script>
    @*<script type="text/javascript">
            //jQuery(document).on('keydown', '#NumeroOrden', function (ev) {
            //    if (ev.which === 13) {
            //        // Will change backgroundColor to blue as example
            //        cantidadanalisis();

            //        // Avoid form submit
            //        return false;
            //    }
            //});

            $(function ()
            {
                cantidadanalisis();
            });

            var listamateriales = [];
            var listaespecificaciones = [];

            $("#createAnalisis").hide();

            function cantidadanalisis()
            {
                mostrarLoadingPanel("content", "");
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CantidadAnalisisRealizados","Analisis")',
                    dataType: 'json',
                    data: { numeroOrden: $("#NumeroOrden").val() },
                    success: function (data) {

                        document.getElementById("cantidadanalisisrealizados").innerHTML = "";
                        $("#cantidadanalisisrealizados").html = "";

                        var newTable = "<div id='cantidadanalisisrealizados'>";
                        newTable += "<div class='col col-lg-5'>";
                        newTable += "<label class='label text-align-center'>Aprobado:</label>";
                        newTable += "<label class='label text-align-center alert alert-success'>" + data.cumplidos + "</label>";
                        newTable += " </div>";
                        newTable += "<div class='col col-lg-5'>";
                        newTable += "<label class='label text-align-center'>No aprobado:</label>";
                        newTable += "<label class='label text-align-center alert alert-danger'>" + data.inCumplidos + "</label>";
                        newTable += " </div>";
                        newTable += " </div>";
                        document.getElementById("cantidadanalisisrealizados").innerHTML = newTable;

                        document.getElementById("totalAnalisis").innerHTML = "";
                        var newTable1 = " <b  id='totalAnalisis' class='text-success pull-right'>";
                        newTable1 += "# análisis realizados: "+ data.total;
                        newTable1 += " </b>";
                        document.getElementById("totalAnalisis").innerHTML = newTable1;
                    }, complete: function (data) {
                        $("#content").waitMe("hide");
                    },
                    error: function (ex) {
                        alert('Failed to retrieve data.' + ex);
                    }
                });

            };



            $("#selectMaterial").change(function ()
            {
                $("#mensajecompletematerial").hide();
                $("#mensajeexistetematerial").hide();
                $("#mensajeseleccionartodofiltar").hide();

            });



          function filtrar()
              {
                $("#mensajecompletematerial").hide();
                $("#mensajeexistetematerial").hide();
                var ProductoId = $("#ProductoId").val();

                if (ProductoId==0) {
                    $("#mensajeseleccionarproducto").show();
                    return;
                }

                if (listamateriales.length == 0) {

                    $("#mensajeseleccionartodofiltar").show();
                    document.getElementById("dtanalisis").innerHTML = "";
                    return;
                }

                mostrarLoadingPanel("content", "");
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ListaEspecificaciones","Analisis")',
                dataType: 'json',
                data: { ProductoId: ProductoId, listamateriales:listamateriales },
                success: function (data) {
                    listaespecificaciones = null;

                    $("#divdtanalisis").show();
                    $("#createAnalisis").show();

                    listaespecificaciones = [];
                    document.getElementById("dtanalisis").innerHTML = "";
                    var newTable = "<table id=dtanalisis class=table table-striped table-forum>";
                    newTable += "<thead>";
                    newTable += "<tr>";
                    newTable += "<th class='text-center hidden-xs hidden-sm' >Descripción</th>";
                    newTable += "<th class='text-center hidden-xs hidden-sm' >Valor</th>";
                    newTable += "<th class='text-center hidden-xs hidden-sm' >Mínimo</th>";
                    newTable += "<th class='text-center hidden-xs hidden-sm' >Máximo</th>";
                    newTable += "<th class='text-center hidden-xs hidden-sm' >Valor</th>";
                    newTable += "</tr>";
                    newTable += "</thead>";
                    newTable += "<tbody>";


                    for (var i = 0; i < data.length; i++) {


                        if (data[i].analisis == true) {

                            var EspecificacionId = data[i].especificacionId;
                            var Resultado = data[i].valorMaterial;
                            if (data[i].tipo == "Texto")
                            {
                                var RangoReferenciaActual = data[i].valorEsperadoProducto;
                            };
                            if (data[i].tipo == "Número") {
                                var RangoReferenciaActual = data[i].valorEsperadoNumProducto;
                            };
                            if (data[i].tipo == "Rango") {
                                var RangoReferenciaActual = data[i].rangoMinimoProducto + "|" + data[i].rangoMaximoProducto;
                            };
                            if (data[i].tipo == "Bit") {
                                var RangoReferenciaActual = "CUMPLE /   NO CUMPLE";
                            };


                            var rangoMinimoProducto = data[i].rangoMinimoProducto;
                            var rangoMaximoProducto = data[i].rangoMaximoProducto;
                            var valorEsperadoProducto = data[i].valorEsperadoProducto;
                            var valorEsperadoNumProducto = data[i].valorEsperadoNumProducto;
                            var Tipo = data[i].tipo;
                            var Aprobado = data[i].cumple;

                            listaespecificaciones.push({ EspecificacionId, valorEsperadoProducto, valorEsperadoNumProducto, Tipo, rangoMinimoProducto, rangoMaximoProducto, Resultado, Aprobado, RangoReferenciaActual });



                            var minimo = (data[i].rangoMinimoProducto == null ? "   " : data[i].rangoMinimoProducto);
                            var maximo = (data[i].rangoMaximoProducto == null ? "   " : data[i].rangoMaximoProducto);

                            if (data[i].tipo == "Texto") {
                                newTable += "<tr id='fila_" + data[i].especificacionId + "'  class='text-danger' >";
                                newTable += "<td class='text-left' ><i id='icono_" + data[i].especificacionId + "' class='glyphicon glyphicon-thumbs-down fa-2x text-danger' ></i >" + " &nbsp; &nbsp;" + data[i].descripcion + "</td > ";
                                newTable += "<td id='valoresperado_" + data[i].especificacionId + "' class='text-center' >" + data[i].valorEsperadoProducto + "</td>";
                                newTable += "<td class='text-center' ></td>";
                                newTable += "<td class='text-center'></td>";
                                newTable += "<td class='text-center' style='width: 40px;'><input onkeyup='cambiotexto(" + data[i].especificacionId + ")' class='grado' id='valor_" + data[i].especificacionId + "' type='text' value='Ingrese el Texto'></td>";
                                newTable += "</tr>";
                            }


                            if (data[i].tipo == "Número") {
                                newTable += "<tr id='fila_" + data[i].especificacionId + "'  class='text-danger' >";
                                newTable += "<td class='text-left' ><i id='icono_" + data[i].especificacionId + "' class='glyphicon glyphicon-thumbs-down fa-2x text-danger' ></i >" + " &nbsp; &nbsp;" + data[i].descripcion + "</td > ";
                                newTable += "<td id='valoresperadonum_" + data[i].especificacionId + "' class='text-center' >" + data[i].valorEsperadoNumProducto + "</td>";
                                newTable += "<td class='text-center' ></td>";
                                newTable += "<td class='text-center'></td>";
                                newTable += "<td class='text-center' style='width: 40px;'><input onkeyup='cambionumero(" + data[i].especificacionId + ")' class='grado' id='valor_" + data[i].especificacionId + "' type='numeric' value=" + parseFloat(data[i].valorMaterial) + "></td>";
                                newTable += "</tr>";
                            }

                            if (data[i].tipo == "Bit") {
                                newTable += "<tr id='fila_" + data[i].especificacionId + "'  class='text-success' >";
                                newTable += "<td class='text-left' ><i id='icono_" + data[i].especificacionId + "' class='glyphicon glyphicon-thumbs-up fa-2x text-success' ></i >" + " &nbsp; &nbsp;" + data[i].descripcion + "</td > ";
                                newTable += "<td class='text-center' ></td>";
                                newTable += "<td class='text-center' ></td>";
                                newTable += "<td class='text-center'></td>";
                                newTable += "<td class='text-center'> <select onchange='cambiocombo(" + data[i].especificacionId + ")' id= 'valor_" + data[i].especificacionId + "' class='grado form-control'>";
                                newTable += " <option class='text-success' value='CUMPLE' selected='selected'>CUMPLE</option>";
                                newTable += " <option class='text-danger' value='NO CUMPLE'>NO CUMPLE</option>";
                                newTable += "</select></td> ";
                                newTable += "</tr>";
                            }


                            if (data[i].tipo == "Rango") {
                                if (data[i].rangoMinimoProducto <= data[i].valorMaterial && data[i].rangoMaximoProducto >= data[i].valorMaterial) {
                                    newTable += "<tr id='fila_" + data[i].especificacionId + "' class='text-success' >";
                                    newTable += "<td class='text-left' ><i id='icono_" + data[i].especificacionId + "' class='glyphicon glyphicon-thumbs-up fa-2x text-success' ></i >" + " &nbsp; &nbsp;" + data[i].descripcion + "</td > ";
                                    newTable += "<td class='text-center'></td>";
                                    newTable += "<td id='minimo_" + data[i].especificacionId + "' class='text-center' >" + minimo + "</td>";
                                    newTable += "<td id='maximo_" + data[i].especificacionId + "' class='text-center'>" + maximo + "</td>";
                                    newTable += "<td class='text-center' style='width: 40px;'><input class='grado' onkeyup='cambio(" + data[i].especificacionId + ")' id='valor_" + data[i].especificacionId + "' type='number' value=" + parseFloat(data[i].valorMaterial) + "></td>";
                                    newTable += "</tr>";
                                }
                                else {
                                    newTable += "<tr id='fila_" + data[i].especificacionId + "' class='text-danger' >";
                                    newTable += "<td  class='text-left' ><i id='icono_" + data[i].especificacionId + "' class='glyphicon glyphicon-thumbs-down fa-2x text-danger' ></i >" + " &nbsp; &nbsp;" + data[i].descripcion + "</td > ";
                                    newTable += "<td class='text-center'></td>";
                                    newTable += "<td id='minimo_" + data[i].especificacionId + "' class='text-center' >" + minimo + "</td>";
                                    newTable += "<td id='maximo_" + data[i].especificacionId + "' class='text-center'>" + maximo + "</td>";
                                    newTable += "<td class='text-center' style='width: 40px;'><input onkeyup='cambio(" + data[i].especificacionId + ")' class='grado' id='valor_" + data[i].especificacionId + "' type='number' value=" + parseFloat(data[i].valorMaterial) + "></td>";
                                    newTable += "</tr>";
                                }

                            }
                        }

                    };

                    newTable += "</tbody>";
                    newTable += "</table>";
                    document.getElementById("dtanalisis").innerHTML = newTable;
                }, complete: function (data) {
                    $("#content").waitMe("hide");
                },
                    error: function (ex) {
                    alert('Failed to retrieve data.' + ex);
                }
            });

            }

            $("#FechaAnalisis").click(function () {
                $("#mFechaAnalisis").hide();
            });
            $("#Turno").click(function () {
                $("#mTurno").hide();
            });
            $("#Temperatura").click(function () {
                $("#mTemperatura").hide();
            });
            $("#MaquinaId").click(function () {
                $("#mMaquinaId").hide();
            });
            $("#NumeroOrden").click(function () {
                $("#mNumeroOrden").hide();
            });
            $("#ClienteId").click(function () {
                $("#mClienteId").hide();
            });
            $("#Rollo").click(function () {
                $("#mRollo").hide();
            });


            function ValidarFormulario()
            {
                var salida = true;

                if ($("#FechaAnalisis").val() == "") {
                    $("#mFechaAnalisis").text("Debe ingresar la Fecha");
                    $("#mFechaAnalisis").show();
                    $("#FechaAnalisis").focus();
                    salida = false;
                }
                if ($("#Turno").val() ==0) {
                    $("#mTurno").text("Debe ingresar el Turno");
                    $("#mTurno").text("Debe ingresar el Turno");
                    $("#Turno").focus();
                    salida = false;
                }
                if ($("#Temperatura").val() == "") {
                    $("#mTemperatura").text("Debe ingresar la Temperatura");
                    $("#mTemperatura").show();
                    $("#Temperatura").focus();
                    salida = false;
                }
                if ($("#MaquinaId").val() ==0) {
                    $("#mMaquinaId").text("Debe ingresar la Máquina");
                    $("#mMaquinaId").show();
                    $("#MaquinaId").focus();
                    salida = false;
                }
                if ($("#NumeroOrden").val() =="") {
                    $("#mNumeroOrden").text("Debe ingresar el Número de Orden");
                    $("#mNumeroOrden").show();
                    $("#NumeroOrden").focus();
                    salida = false;
                }
                if ($("#ClienteId").val() == 0) {
                    $("#mClienteId").text("Debe ingresar el Cliente");
                    $("#mClienteId").show();
                    $("#ClienteId").focus();
                    salida = false;
                }
                if ($("#Rollo").val() == "") {
                    $("#mRollo").text("Debe ingresar el Rollo");
                    $("#mRollo").show();
                    $("#Rollo").focus();
                    salida = false;
                }
                return salida;
            }

            var analisisD = null;
            var listaMaterialesPost = new Array();

            function guardar()
            {


                mostrarLoadingPanel("content", "");

                if (ValidarFormulario() == false) {
                    event.preventDefault();
                    $("#content").waitMe("hide");
                    return;
                }

                for (var i = 0; i < listaespecificaciones.length; i++) {

                    var valor = $("#valor_" + listaespecificaciones[i].EspecificacionId).val();
                    var tipo = listaespecificaciones[i].Tipo;

                    if (tipo=="Texto") {

                        listaespecificaciones[i].Resultado = valor;
                        if (valor == listaespecificaciones[i].valorEsperadoProducto) {

                            listaespecificaciones[i].Aprobado = true;
                        }
                        else
                        {
                            listaespecificaciones[i].Aprobado = false;
                        }

                    }

                    if (tipo == "Número") {

                        listaespecificaciones[i].Resultado = parseFloat(valor);
                        if (parseFloat(valor) == listaespecificaciones[i].valorEsperadoNumProducto) {

                            listaespecificaciones[i].Aprobado = true;
                        }
                        else {
                            listaespecificaciones[i].Aprobado = false;
                        }

                    }

                    if (tipo == "Rango") {

                        listaespecificaciones[i].Resultado = parseFloat(valor);
                        listaespecificaciones[i].Aprobado = cumple(listaespecificaciones[i].rangoMinimoProducto, listaespecificaciones[i].rangoMaximoProducto, valor)

                    }

                    if (tipo == "Bit") {
                        listaespecificaciones[i].Resultado = valor;
                        if (valor == "NO CUMPLE") {
                            listaespecificaciones[i].Aprobado = false;

                        } else {
                            if (valor == "CUMPLE") {

                                listaespecificaciones[i].Aprobado = true;
                            }
                        }
                    }

                    //var valor = $("#valor_" + listaespecificaciones[i].EspecificacionId).val();
                    //if (valor == "NO CUMPLE") {
                    //    listaespecificaciones[i].Resultado = valor;
                    //    listaespecificaciones[i].Aprobado = false;

                    //} else {
                    //    if (valor == "CUMPLE") {
                    //        listaespecificaciones[i].Resultado = valor;
                    //        listaespecificaciones[i].Aprobado = true;
                    //    }
                    //    else {
                    //        listaespecificaciones[i].Resultado = parseFloat(valor);
                    //        listaespecificaciones[i].Aprobado = cumple(listaespecificaciones[i].rangoMinimoProducto, listaespecificaciones[i].rangoMaximoProducto, valor)
                    //    }
                    //}
                }

                listaMaterialesPost = [];
                for (var i = 0; i < listamateriales.length; i++) {
                    var MaterialId = listamateriales[i].idmaterial
                    listaMaterialesPost.push({ MaterialId });
                }

                var FechaAnalisis=  $("#FechaAnalisis").val();
                var Turno=  $("#Turno").val();
                var Temperatura = $("#Temperatura").val();
                var MaquinaId = $("#MaquinaId").val();
                var NumeroOrden = $("#NumeroOrden").val();
                var ClienteId = $("#ClienteId").val();
                var Rollo = $("#Rollo").val();
                var Observaciones = $("#Observaciones").val();
                var AnalisisId = $("#AnalisisId").val();
                var ProductoId = $("#ProductoId").val();
                analisis = null;
                analisis = { FechaAnalisis,ProductoId, Turno, Temperatura, MaquinaId, NumeroOrden, ClienteId, Rollo, Observaciones };



                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Create","Analisis")',
                    dataType: 'json',
                    data: { listaDetalle: listaespecificaciones, analisis: analisis, listaMateriales:listaMaterialesPost },
                    success: function (data) {

                        if (data == 1) {
                            mostrarNotificacion("Satisfactorio", "El análisis se ha insertado satisfactoriamente.");
                            location.href = '@Url.Action("Index")';

                        }
                        else {
                            mostrarNotificacion("Error", "El análisis no se ha podido insertar.")

                        }

                    }, complete: function (data) {
                        $("#content").waitMe("hide");

                    },
                    error: function (ex) {
                        mostrarNotificacion("Error", "El análisis no se ha podido insertar.")
                        location.href = '@Url.Action("Index")';
                    }
                });
            }

            function cumple(minimo, maximo, valor)
            {

                if (isNaN(minimo)) {
                    if (maximo >= valor) {
                        return true;
                    }
                    else {
                        return false;
                    }

                }

                if (isNaN(maximo)) {
                    if (minimo <= valor) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }


                if ((minimo <= valor) && (maximo >= valor)) {
                    return true;
                }
                else {
                    return false;
                }

            }

            function eliminarmaterial(idmaterial)
            {
                $("#divdtanalisis").hide();
                $("#createAnalisis").hide();
                $("#mensajecompletematerial").hide();
                $("#mensajeexistetematerial").hide();
                $("#mensajeseleccionartodofiltar").hide();
                document.getElementById("dtanalisis").innerHTML = "";
                for (var i = 0; i < listamateriales.length; i++)
                {
                    if (listamateriales[i].idmaterial == idmaterial) {
                        listamateriales.splice(i, 1);
                        tbdibujaradicionarmaterial();

                        break;
                    }

                }
            }

            function tbdibujaradicionarmaterial()
            {
                if (listamateriales.length==0) {
                    document.getElementById("accordion").innerHTML = "";
                }

                if (listamateriales.length > 0) {

                    document.getElementById("accordion").innerHTML = "";
                    var newAcordion = " <div class=panel-group smart-accordion-default id=accordion >";
                    for (var i = 0; i < listamateriales.length; i++) {
                        newAcordion += " <div class='panel panel-default'>";
                        newAcordion += " <div class='panel-heading'>";
                        newAcordion += " <h4 class='panel-title'>";
                        newAcordion += "<a data-toggle='collapse' class='collapsed' data-parent='#accordion' href='#" + listamateriales[i].idtipomaterial + "'><i class='fa fa-fw fa-plus-circle txt-color-green'></i> <i class='fa fa-fw fa-minus-circle txt-color-red'></i><b> " + listamateriales[i].tipomaterial + " : " + listamateriales[i].material + "</b></a>";

                        newAcordion += " <div id='" + listamateriales[i].idtipomaterial + "' class='panel-collapse collapse'>";
                        newAcordion += " <div class='panel-body no-padding'>";
                        newAcordion += " <table class='table table-bordered table-condensed'>";
                        newAcordion += "<thead>";

                        newAcordion += "<tr>";
                        newAcordion += "<th class='text-center font-md hidden-xs hidden-sm'>Descripción</th>";
                        newAcordion += "<th class='text-center font-md hidden-xs hidden-sm' >Valor</th>";
                        newAcordion += "</tr>";
                        newAcordion += "</thead>";
                        newAcordion += "<tbody>";
                        for (var y = 0; y < listamateriales[i].lista.length; y++) {
                            newAcordion += "<tr >";
                            newAcordion += "<td class='font-sm' >" + listamateriales[i].lista[y].descripcionEspecificacion + "</td > ";
                            newAcordion += "<td class='font-sm'>" + listamateriales[i].lista[y].valorEspecificacion + "</td>";
                            newAcordion += "</tr>";
                        };
                        newAcordion += "<tfoot>";
                        newAcordion += "<tr>";
                        newAcordion += "<a href='javascript:void (0)' class='btn btn-danger' title ='Eliminar' onclick='eliminarmaterial(" + listamateriales[i].idmaterial + ")'>Eliminar</a>";
                        newAcordion += "</tr>";
                        newAcordion += "</tfoot >";
                        newAcordion += "</tbody>";

                        newAcordion += "</table>";

                        newAcordion += " </div>";

                        newAcordion += " </div>";
                    };
                    newAcordion += " </div>";
                    document.getElementById("accordion").innerHTML = newAcordion;
                    $("#tipomaterialadicionado").show();
                }
            }

            function adicionarmaterial()
            {
                $("#divdtanalisis").hide();
                $("#createAnalisis").hide();
                $("#mensajecompletematerial").hide();
                $("#mensajeexistetematerial").hide();
                $("#mensajeseleccionartodofiltar").hide();
                document.getElementById("dtanalisis").innerHTML = "";
                var tipomaterial = $("#selectTipoMaterial option:selected").text();
                var idtipomaterial = $("#selectTipoMaterial").val();
                var material = $("#selectMaterial option:selected").text();
                var idmaterial = $("#selectMaterial").val();

                if (idmaterial == 0 || idtipomaterial==0) {
                    $("#mensajecompletematerial").show();
                    return;
                }

                for (var i = 0; i < listamateriales.length; i++) {
                    if (listamateriales[i].idtipomaterial == idtipomaterial) {
                        $("#mensajeexistetematerial").show();
                        return;
                    }
                }

                 mostrarLoadingPanel("content", "");
                    $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EspecificacionesGeneralesMaterial","Analisis")',
                    dataType: 'json',
                        data: { idmaterial: idmaterial },
                        success: function (data) {
                            listamateriales.push({ idtipomaterial: idtipomaterial, tipomaterial: tipomaterial, idmaterial: idmaterial, material: material, lista: data });
                            tbdibujaradicionarmaterial();
                    $("#content").waitMe("hide");
                    }, complete: function (data) {
                        $("#content").waitMe("hide");
                    },
                    error: function (ex) {
                        alert('Failed to retrieve data.' + ex);
                        }
                });
            }

            function cambiocombo(valor) {

                var combo = $("#valor_" + valor).val();
                var maximo = parseFloat($("#maximo_" + valor).text());
                var iconoCumple = "glyphicon-thumbs-up";
                var iconoNoCumple = "glyphicon-thumbs-down";
                var textocumple = "text-success";
                var textonocumple = "text-danger";

                if (combo=="CUMPLE") {
                        $("#fila_" + valor).addClass(textocumple).removeClass(textonocumple);
                        $("#icono_" + valor).addClass(iconoCumple).addClass(textocumple).removeClass(textonocumple).removeClass(iconoNoCumple);
                    }
                    else {
                        $("#fila_" + valor).addClass(textonocumple).removeClass(textocumple);
                        $("#icono_" + valor).addClass(iconoNoCumple).addClass(textonocumple).removeClass(textocumple).removeClass(iconoCumple);
                    }
            }

            function cambiotexto(valor) {

                var valoresperado = $("#valoresperado_" + valor).text();
                var valorreal =$("#valor_" + valor).val();
                var iconoCumple = "glyphicon-thumbs-up";
                var iconoNoCumple = "glyphicon-thumbs-down";
                var textocumple = "text-success";
                var textonocumple = "text-danger";

                if ((valoresperado == valorreal)) {
                    $("#fila_" + valor).addClass(textocumple).removeClass(textonocumple);
                    $("#icono_" + valor).addClass(iconoCumple).addClass(textocumple).removeClass(textonocumple).removeClass(iconoNoCumple);
                }
                else {
                    $("#fila_" + valor).addClass(textonocumple).removeClass(textocumple);
                    $("#icono_" + valor).addClass(iconoNoCumple).addClass(textonocumple).removeClass(textocumple).removeClass(iconoCumple);
                }

            }

            function cambionumero(valor) {

                var valoresperadonum = parseFloat($("#valoresperadonum_" + valor).text());
                var valorreal = parseFloat($("#valor_" + valor).val());
                var iconoCumple = "glyphicon-thumbs-up";
                var iconoNoCumple = "glyphicon-thumbs-down";
                var textocumple = "text-success";
                var textonocumple = "text-danger";

                if ((valoresperadonum == valorreal)) {
                    $("#fila_" + valor).addClass(textocumple).removeClass(textonocumple);
                    $("#icono_" + valor).addClass(iconoCumple).addClass(textocumple).removeClass(textonocumple).removeClass(iconoNoCumple);
                }
                else {
                    $("#fila_" + valor).addClass(textonocumple).removeClass(textocumple);
                    $("#icono_" + valor).addClass(iconoNoCumple).addClass(textonocumple).removeClass(textocumple).removeClass(iconoCumple);
                }

            }

            function cambio(valor)
            {

                var minimo = parseFloat($("#minimo_" + valor).text());
                var maximo = parseFloat($("#maximo_" + valor).text());

                var valorreal = parseFloat($("#valor_" + valor).val());
                var iconoCumple= "glyphicon-thumbs-up";
                var iconoNoCumple = "glyphicon-thumbs-down";
                var textocumple = "text-success";
                var textonocumple = "text-danger";

                if (isNaN(minimo)) {
                    if (maximo >= valorreal) {
                        $("#fila_" + valor).addClass(textocumple).removeClass(textonocumple);
                        $("#icono_" + valor).addClass(iconoCumple).addClass(textocumple).removeClass(textonocumple).removeClass(iconoNoCumple);
                    }
                    else {
                        $("#fila_" + valor).addClass(textonocumple).removeClass(textocumple);
                        $("#icono_" + valor).addClass(iconoNoCumple).addClass(textonocumple).removeClass(textocumple).removeClass(iconoCumple);
                    }
                    return;
                }

                if (isNaN(maximo)) {
                    if (minimo <= valorreal) {
                        $("#fila_" + valor).addClass(textocumple).removeClass(textonocumple);
                        $("#icono_" + valor).addClass(iconoCumple).addClass(textocumple).removeClass(textonocumple).removeClass(iconoNoCumple);
                    }
                    else {
                        $("#fila_" + valor).addClass(textonocumple).removeClass(textocumple);
                        $("#icono_" + valor).addClass(iconoNoCumple).addClass(textonocumple).removeClass(textocumple).removeClass(iconoCumple);
                    }
                    return;
                }


                if ((minimo <= valorreal) && (maximo >= valorreal)) {
                    $("#fila_" + valor).addClass(textocumple).removeClass(textonocumple);
                    $("#icono_" + valor).addClass(iconoCumple).addClass(textocumple).removeClass(textonocumple).removeClass(iconoNoCumple);
                }
                else
                {
                    $("#fila_" + valor).addClass(textonocumple).removeClass(textocumple);
                    $("#icono_" + valor).addClass(iconoNoCumple).addClass(textonocumple).removeClass(textocumple).removeClass(iconoCumple);
                }

            }

            $("#selectTipoMaterial").change(function () {
                $("#mensajecompletematerial").hide();
                $("#mensajeexistetematerial").hide();
                $("#mensajeseleccionartodofiltar").hide();
                mostrarLoadingPanel("content", "");
                $("#selectMaterial").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListarMaterialPorTipo","Analisis")',
                    dataType: 'json',
                    data: { TipoMaterialId: $("#selectTipoMaterial").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#selectMaterial").append('<option value="'
                                + data.materialId + '">'
                                + data.codigoIngreso + '</option>');
                        });
                        $("#selectMaterial").select2();
                    }, complete: function (data) {
                        $("#content").waitMe("hide");
                    },
                    error: function (ex) {
                        alert('Failed to retrieve data.' + ex);
                    }
                });
                return false;
            });


            $("#ProductoId").change(function () {
                $("#divdtanalisis").hide();
                $("#createAnalisis").hide();
                $("#mensajeseleccionartodofiltar").hide();
                document.getElementById("dtanalisis").innerHTML = "";
                $("#mensajeseleccionarproducto").hide();
                mostrarLoadingPanel("content", "");
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDatosProducto","Analisis")',
                    dataType: 'json',
                    data: { ProductoId: $("#ProductoId").val() },
                    success: function (data) {
                        $("#detalleproducto").show();
                        $("#descripcionproducto").html(data.descripcionProducto);
                        //$("#observacionproducto").html(data.observacionProducto);id="observacionproducto"
                        document.getElementById("observacionproducto").innerHTML = data.observacionProducto;
                        $("#clasificacionproducto").html(data.claseProducto.claseDescripcion);
                        $("#gradoproducto").html(data.grado);
                        $("#diametroproducto").html(data.nominal);
                    }, complete: function (data) {
                        $("#content").waitMe("hide");
                    },
                    error: function (ex) {
                        alert('Failed to retrieve data.' + ex);
                    }
                });
                return false;
            });
        </script>*@
}